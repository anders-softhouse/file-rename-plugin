/*
 * Infonova API Swagger
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package se.telia.infonova.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * ArPaymentDomainBillingAccountPaymentMethodEventResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-11-07T15:46:38.398+01:00")
public class ArPaymentDomainBillingAccountPaymentMethodEventResponse {
  @JsonProperty("details")
  private Map<String, String> details = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("uniqueReference")
  private String uniqueReference = null;

  public ArPaymentDomainBillingAccountPaymentMethodEventResponse details(Map<String, String> details) {
    this.details = details;
    return this;
  }

  public ArPaymentDomainBillingAccountPaymentMethodEventResponse putDetailsItem(String key, String detailsItem) {
    if (this.details == null) {
      this.details = new HashMap<String, String>();
    }
    this.details.put(key, detailsItem);
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getDetails() {
    return details;
  }

  public void setDetails(Map<String, String> details) {
    this.details = details;
  }

  public ArPaymentDomainBillingAccountPaymentMethodEventResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ArPaymentDomainBillingAccountPaymentMethodEventResponse uniqueReference(String uniqueReference) {
    this.uniqueReference = uniqueReference;
    return this;
  }

   /**
   * Get uniqueReference
   * @return uniqueReference
  **/
  @ApiModelProperty(value = "")
  public String getUniqueReference() {
    return uniqueReference;
  }

  public void setUniqueReference(String uniqueReference) {
    this.uniqueReference = uniqueReference;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArPaymentDomainBillingAccountPaymentMethodEventResponse arPaymentDomainBillingAccountPaymentMethodEventResponse = (ArPaymentDomainBillingAccountPaymentMethodEventResponse) o;
    return Objects.equals(this.details, arPaymentDomainBillingAccountPaymentMethodEventResponse.details) &&
        Objects.equals(this.id, arPaymentDomainBillingAccountPaymentMethodEventResponse.id) &&
        Objects.equals(this.uniqueReference, arPaymentDomainBillingAccountPaymentMethodEventResponse.uniqueReference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(details, id, uniqueReference);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArPaymentDomainBillingAccountPaymentMethodEventResponse {\n");
    
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    uniqueReference: ").append(toIndentedString(uniqueReference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

